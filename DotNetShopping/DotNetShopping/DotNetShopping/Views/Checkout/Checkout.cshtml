@model DotNetShopping.Models.Order
@{
    ViewBag.Title = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Checkout</h2>
<div class="row">
    <div class="col-sm-9">
        @using (Html.BeginForm())
        {
            <ol class="opc" id="checkoutSteps">
                <li id="opc-billing" class="section">
                    <div class="step-title">
                        <span class="number">1</span>
                        <span class="title">Billing Information</span>
                    </div>
                    <div id="checkout-step-billing" class="checkoutContent">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingFirstName, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.BillingFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingFirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingLastName, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.BillingLastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingLastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingCompany, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.BillingCompany, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingCompany, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingEmail, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.BillingEmail, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingStreet1, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.BillingStreet1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingStreet1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.BillingStreet2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingStreet2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingCountryId, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.DropDownList("BillingCountryId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BillingCountryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingStateId, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.DropDownList("BillingStateId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BillingStateId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingCityId, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.DropDownList("BillingCityId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BillingCityId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingZip, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.BillingZip, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingZip, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.BillingTelephone, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.BillingTelephone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingTelephone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                
                            </div>
                        </div>
                    </div>
                </li>
                <li id="opc-shipping" class="section">
                    <div class="step-title">
                        <span class="number">3</span>
                        <span class="title">Shipping Information</span>
                    </div>
                    <div id="checkout-step-shipping" class="checkoutContent">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingFirstName, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.ShippingFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShippingFirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingLastName, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.ShippingLastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShippingLastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingCompany, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.ShippingCompany, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShippingCompany, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingStreet1, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.ShippingStreet1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShippingStreet1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.ShippingStreet2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShippingStreet2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingCountryId, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.DropDownList("ShippingCountryId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ShippingCountryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingStateId, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.DropDownList("ShippingStateId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ShippingStateId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingCityId, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.DropDownList("ShippingCityId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ShippingCityId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingZip, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.ShippingZip, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShippingZip, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-label">
                                    @Html.LabelFor(model => model.ShippingTelephone, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="input-editor">
                                    @Html.EditorFor(model => model.ShippingTelephone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShippingTelephone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">

                            </div>
                        </div>

                    </div>
                </li>
                <li id="opc-shipping_method" class="section">
                    <div class="step-title">
                        <span class="number">4</span>
                        <span class="title">Shipping Method</span>
                    </div>
                    <div id="checkout-step-shipping_method" class="checkoutContent">

                    </div>
                </li>
                <li id="opc-payment" class="section">
                    <div class="step-title">
                        <span class="number">5</span>
                        <span class="title">Payment Information</span>
                    </div>
                    <div id="checkout-step-payment" class="checkoutContent" >

                    </div>
                </li>
                <li id="opc-review" class="section">
                    <div class="step-title">
                        <span class="number">6</span>
                        <span class="title">Order Review</span>
                    </div>
                    <div id="checkout-step-review" class="checkoutContent">

                    </div>
                </li>
            </ol>
            <input type="submit" value="Submit" class="btn btn-default" />
        }
    </div>
    <div class="col-sm-3">
    </div>
</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@section scriptsready{
    $("#BillingCountryId").change(function () {
    var countryId = this.value;
    //alert('countryId:' + countryId);
    $('#BillingStateId').empty();
    $('#BillingCityId').empty();

    if (countryId > 0) {
    var dataToPost = {
    CountryId: countryId
    };
    $.post('/Api/GetStatesFor', dataToPost)
    .done(function (response, status, jqxhr) {
    // this is the "success" callback
    if (response['States'].length > 0) {
    $('#BillingCityId').append($("<option />").val(0).text('Select Country/State'));
    $('#BillingStateId').prop("disabled", false);
    $('#BillingStateId').append($("<option />").val(0).text('Select State'));
    $.each(response['States'], function () {
    $('#BillingStateId').append($("<option />").val(this.StateId).text(this.Name));
    });
    }
    else {
    $('#BillingStateId').append($("<option />").val(0).text('No State'));
    $('#BillingStateId').prop("disabled", true);
    fillCities(countryId, 0);
    }
    })
    .fail(function (jqxhr, status, error) {
    // this is the ""error"" callback
    alert('Error!');
    });
    }
    else {
    $('#BillingStateId').append($("<option />").val(0).text('Select Country'));
    $('#BillingStateId').prop("disabled", false);
    }
    });
    $("#BillingStateId").change(function () {
    var countryId = $('#BillingCountryId').val();
    var stateId = this.value;
    if (stateId > 0 && countryId > 0) {
    fillCities(countryId, stateId);
    }
    else {
    $('#BillingCityId').append($("<option />").val(0).text('Select Country/State'));
    }
    });
    function fillCities(countryId, stateId) {
    var dataToPost = {
    CountryId: countryId,
    StateId: stateId
    };
    $.post('/Api/GetCitiesFor', dataToPost)
    .done(function (response, status, jqxhr) {
    if (response['Cities'].length > 0) {
    $('#BillingCityId').empty();
    $('#BillingCityId').append($("<option />").val(0).text('Select City'));
    $.each(response['Cities'], function () {
    $('#BillingCityId').append($("<option />").val(this.CityId).text(this.Name));
    });
    }
    })
    .fail(function (jqxhr, status, error) {
    // this is the ""error"" callback
    alert('Error!');
    });
    }
}
